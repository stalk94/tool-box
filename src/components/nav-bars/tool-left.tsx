import React, { useState } from "react";
import { Box, BoxProps, useTheme, alpha, darken } from "@mui/material";
import { NavLinkItem } from '../popup/menuItem';
import BaseLeftSideBar from "./left-nav";
import { Mutators } from '../tools/decorators';


type SideBarAndToolPanelProps = {
    schemaNavBar: {
        items: NavLinkItem[]
        end?: NavLinkItem[]
    }
    /** ‚¨áÔ∏è –ù–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å–∫–∞ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤(tool) */
    end?: React.ReactNode
    /** ‚¨ÜÔ∏è –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å–∫–∞ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤(tool) */
    start?: React.ReactNode
    /** üíª –ö–æ–Ω—Ç–µ–Ω—Ç —Ä–∞–±–æ—á–µ–π –æ–±–ª–∞—Å—Ç–∏(–ø—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å) */
    children: React.ReactNode
    /** üî• –Ω–∞–∂–∞—Ç —ç–ª–µ–º–µ–Ω—Ç –±–æ–∫–æ–≤–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */
    onChangeNavigation?: (item: NavLinkItem)=> void
    /** üìè –®–∏—Ä–∏–Ω–∞ —Ä–∞–±–æ—á–µ–π –æ–±–ª–∞—Å—Ç–∏ (–±–µ–∑ —É—á–µ—Ç–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏) */
    width?: string | number
} & BoxProps



/**
 * –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å–æ —Å–≤—è–∑–∞–Ω—ã–º –ø–æ–ª–µ–º —Å–ø—Ä–∞–≤–∞
 * - –ø–æ–¥–∞–µ–º `schemaNavBar`
 * - —Å–ª—É—à–∞–µ–º `onChangeNavigation`
 * - –º–µ–Ω—è–µ–º `children`
 */
export default function SideBarAndToolPanel({ schemaNavBar, start, end, children, onChangeNavigation, sx, width }: SideBarAndToolPanelProps) {
    const theme = useTheme();
    
    
    return(
        <Box component='div'
            sx={{
                ...sx,
                display: 'flex',
                flexDirection: 'row',
                maxHeight: '100%',
                overflow: 'hidden',
            }}
        >
            {/* –ª–µ–≤–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é */}
            <BaseLeftSideBar
                type="drawer"
                collapsed={true}
                onChange={onChangeNavigation}
                items={schemaNavBar.items}
                end={schemaNavBar.end}
            />

            {/* –ø—Ä–∞–≤–∞—è —Ä–∞–±–æ—á–∞—è –æ–±–ª–∞—Å—Ç—å */}
            <Box
                sx={{
                    width: width ?? 200,
                    height: '100%',
                    display: 'flex',
                    flexDirection: 'column',
                    backgroundColor: darken(alpha(theme.palette.background.paper, 1), 0.15),
                    borderLeft: `1px solid ${theme.palette.divider}`,
                    overflowY: "auto",
                    ...theme.elements.scrollbar
                }}
            >
                {/* –≤–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ */}
                <Box 
                    sx={{
                        position: "sticky",
                        top: 0,
                        zIndex: 10,
                        textAlign: 'center',
                        background: 'gray',
                    }}
                >
                    { start }
                </Box>

               { children }

               {/* –Ω–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ */}
                <Box 
                    sx={{
                        position: "sticky",
                        bottom: 0,
                        zIndex: 10,
                        marginTop: 'auto',
                        textAlign: 'center',
                        background: 'gray',
                    }}
                >
                    { end }
                </Box>
            </Box>
        </Box>
    );
}