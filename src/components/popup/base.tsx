import React, { useState, ReactNode, ReactElement } from "react";
import ItemsList, { NavLinkItem } from '../menu/list';
import Menu from '../menu';



type CustomMenuProps = {
    children: ReactNode
    items: NavLinkItem[]
    /** ‚ùî —Å–ª—É—à–∞—Ç–µ–ª—å —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—à–∏–π –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏/–æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–∞–Ω–µ–ª–∏ */
    onOpenClose?: (value: boolean)=> void
    /** üî• –§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è —Å—Ç–∞–≤–∏—Ç —Å–≤–æ–π—Å—Ç–≤–æ(select: true) –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç */
    onSelect?: (item: NavLinkItem)=> void
}



export default function({ children, items, onOpenClose, onSelect }: CustomMenuProps) {
    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);
    const open = Boolean(anchorEl);


    const handleOpen = (event: React.MouseEvent<HTMLElement>) => {
        setAnchorEl(event.currentTarget);
        if(onOpenClose) onOpenClose(true);
    }
    const handleClose = () => {
        setAnchorEl(null);
        if(onOpenClose) onOpenClose(false);
    }
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ children - —ç—Ç–æ —ç–ª–µ–º–µ–Ω—Ç, —Å –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å
    const childWithProps = (React.isValidElement(children)
        ? React.cloneElement(children as ReactElement, {
            onClick: (event: React.MouseEvent<HTMLElement>) => {
                handleOpen(event);                                      // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é
                if ((children as ReactElement).props.onClick) {
                    (children as ReactElement).props.onClick(event);    // –í—ã–∑–æ–≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ onClick
                }
            },
        })
        : children
    );


    return (
        <React.Fragment>
            {/* –û–±–µ—Ä—Ç—ã–≤–∞–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π children —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º onClick */}
            { childWithProps }

            {/* –ú–µ–Ω—é */}
            <Menu
                anchorEl={anchorEl} 
                open={open} 
                onClose={handleClose}
            >
                { items.map((item, index) => (
                    <ItemsList 
                        key={index}
                        item={item}
                        onItemClick={(item)=> { 
                            onSelect && onSelect(item);
                            handleClose(); 
                        }}
                    />
                ))}
            </Menu>
        </React.Fragment>
    );
}