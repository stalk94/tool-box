import { createClient } from '@supabase/supabase-js';
import { applyPromptTemplate } from '@system/helpers/ai';


const supabase = createClient(
    process.env.SUPABASE_URL,
    process.env.SUPABASE_KEY
);
const OPENAI_API_KEY = process.env.OPENAI_API_KEY;

const promptAi = `
–¢—ã ‚Äî –ò–ò, —Å–æ–∑–¥–∞—é—â–∏–π –±–ª–æ–∫–∏ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ —Å–∞–π—Ç–æ–≤. –ö–∞–∂–¥—ã–π –±–ª–æ–∫ –æ–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞–Ω —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–º. –¢—ã –Ω–µ –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø–æ—è—Å–Ω–µ–Ω–∏–π ‚Äî —Ç–æ–ª—å–∫–æ —á–∏—Å—Ç—ã–π JSON.

–¢—ã –ø–æ–ª—É—á–∞–µ—à—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å. –ù–∞ –∏—Ö –æ—Å–Ω–æ–≤–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–π UI-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã.

–§–æ—Ä–º–∞—Ç:
[
  {
    "id": number,
    "parent": "{{id}}",
    "props": {
      "data-type": "...",
      // –¥—Ä—É–≥–∏–µ –ø–æ–ª—è
    }
  },
  ...
]

–ü—Ä–∞–≤–∏–ª–∞:
- –¢–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–π JSON-–º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤
- –ù–∏–∫–∞–∫–∏—Ö children —Å –≤–ª–æ–∂–µ–Ω–Ω—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
- –ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å type, container, styles –≤–Ω–µ props
- –ù–µ –¥–æ–±–∞–≤–ª—è—Ç—å –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏, –æ–±—ä–µ–∫—Ç—ã, null, undefined
- –ö–∞–∂–¥—ã–π props —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –∑–Ω–∞—á–∏–º—ã–µ –ø–æ–ª—è
- style ‚Äî –æ–±—ä–µ–∫—Ç (fontSize: 18), –Ω–µ —Å—Ç—Ä–æ–∫–∞
- id ‚Äî —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, {{timestamp}} + –∏–Ω–¥–µ–∫—Å)
- parent ‚Äî —Å—Ç—Ä–æ–∫–∞, —Å–æ–≤–ø–∞–¥–∞—é—â–∞—è —Å {{id}}

–î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è data-type –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–æ–ª—è:

- "Typography" ‚Äî children, variant, align, style
- "Button" ‚Äî label, variant, color, type, style, startIcon, endIcon
- "TextInput" ‚Äî label, placeholder, value, fullWidth, type, style
- "Number" ‚Äî label, placeholder, fullWidth, min, max, step, style
- "Date", "Time" ‚Äî label, fullWidth, style
- "Select" ‚Äî label, options, fullWidth, style
- "Checkbox", "Switch" ‚Äî label, checked, style
- "Image" ‚Äî src, alt, width, height, style
- "Video" ‚Äî src, controls, autoplay, loop, muted, poster, style
- "div" ‚Äî —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä, —Ç–æ–ª—å–∫–æ style –∏ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ css

–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
- {{id}} ‚Äî id —è—á–µ–π–∫–∏
- {{timestamp}} ‚Äî —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è


–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π —Ç–æ–ª—å–∫–æ JSON –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤, –∫–∞–∂–¥—ã–π –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–¥–Ω–æ–º—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—É —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –ø–æ—è—Å–Ω–µ–Ω–∏–π, —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª–µ–π.
`


export async function uploadImageAndGenerateBlock(file: File, userPrompt: string): Promise<string> {
    const fileName = `${Date.now()}-${file.name}`;

    // üîº –ó–∞–≥—Ä—É–∑–∫–∞ –≤ Supabase
    const { data: uploadData, error: uploadError } = await supabase.storage
        .from('images')
        .upload(fileName, file);

    if (uploadError) {
        throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ Supabase: ' + uploadError.message);
    }

    const resSpb = supabase.storage.from('images').getPublicUrl(fileName);

    // ü§ñ –ó–∞–ø—Ä–æ—Å –≤ GPT-4 Vision
    const res = await fetch('https://api.openai.com/v1/chat/completions', {
        method: 'POST',
        headers: {
            'Authorization': `Bearer ${OPENAI_API_KEY}`,
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            model: 'gpt-4-turbo-2024-04-09',
            max_tokens: 2048,
            messages: [
                {
                    role: 'system',
                    content: applyPromptTemplate({id:'test'}, promptAi)
                },
                {
                    role: 'user',
                    content: [
                        { type: 'text', text: userPrompt },
                        { type: 'image_url', image_url: { url: resSpb.data.publicUrl } }
                    ]
                }
            ]
        })
    });

    const result = await res.json();

    if (!res.ok) {
        console.error('[OpenAI Error]', result);
        throw new Error('–û—à–∏–±–∫–∞ –æ—Ç OpenAI');
    }

    return result.choices?.[0]?.message?.content?.trim() || '';
}
