import puppeteer from 'puppeteer';
import path from 'path';
import fs from 'fs/promises';


async function screenshotElementFromHTML() {
  const browser = await puppeteer.launch();
  const page = await browser.newPage();

  // –ü—Ä–∏–º–µ—Ä HTML (–º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª, –∏–ª–∏ —Å–æ–±—Ä–∞—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏)
  const html = `
    <html>
      <head>
        <style>
          body { margin: 0; font-family: sans-serif; }
          .capture {
            width: 300px;
            height: 200px;
            background: linear-gradient(to right, #00f, #0ff);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
          }
        </style>
      </head>
      <body>
        <div class="capture">üéØ Hello, Screenshot!</div>
      </body>
    </html>
  `;

  // –ó–∞–≥—Ä—É–∂–∞–µ–º HTML
  await page.setContent(html, { waitUntil: 'domcontentloaded' });

  // –ñ–¥—ë–º, –ø–æ–∫–∞ —Ä–µ–Ω–¥–µ—Ä –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ ‚Äî –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–∞—É–∑—É –∏–ª–∏ waitForSelector)
  await page.waitForSelector('.capture');

  const element = await page.$('.capture');
  if (!element) throw new Error('–≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');

  // –°–∫—Ä–∏–Ω—à–æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ DOM-—ç–ª–µ–º–µ–Ω—Ç–∞
  await element.screenshot({ path: 'capture.png' });

  console.log('–°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ capture.png');

  await browser.close();
}